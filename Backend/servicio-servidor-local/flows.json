[
    {
        "id": "9dd59f4f9af08f7f",
        "type": "tab",
        "label": "Sensores",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0ebacf60de60e21b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "${BROKER_SERVICE}",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "/conexion",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "309f538e916d9ee0",
        "type": "mqtt out",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "topic": "/sensores/temperatura",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ebacf60de60e21b",
        "x": 800,
        "y": 80,
        "wires": []
    },
    {
        "id": "84be8568d208e933",
        "type": "inject",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "props": [],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "16c8b6ac48bee143"
            ]
        ]
    },
    {
        "id": "9f113a42ef98f914",
        "type": "function",
        "z": "9dd59f4f9af08f7f",
        "name": "simular sensores temperatura",
        "func": "const SERVER_ID = env.get(\"SERVER_ID\")\nconst NUM_SENS_TEMPERATURA = parseInt(env.get(\"NUM_SENS_TEMPERATURA\"))\n\nlet mensajes = []\n\nfor(let i=0; i<NUM_SENS_TEMPERATURA; i++)\n{\n    mensajes.push({\n        \"payload\": {\n            \"idServidorLocal\": SERVER_ID,\n            \"idSensor\": `${SERVER_ID}_temperatura_${i}`,\n            \"valor\": Math.random() * 80,\n            \"timestamp\": Date.now()\n        }\n    })\n}\n\nreturn [mensajes];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 80,
        "wires": [
            [
                "309f538e916d9ee0"
            ]
        ]
    },
    {
        "id": "1602689b4c4068ed",
        "type": "comment",
        "z": "9dd59f4f9af08f7f",
        "name": "Temperatura",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "b448659501ba2bfd",
        "type": "inject",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "props": [],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "febc8b8e14af29ae"
            ]
        ]
    },
    {
        "id": "cf7a9a9edb32ac7d",
        "type": "comment",
        "z": "9dd59f4f9af08f7f",
        "name": "Presencia",
        "info": "",
        "x": 80,
        "y": 140,
        "wires": []
    },
    {
        "id": "f80f2d671d91404f",
        "type": "function",
        "z": "9dd59f4f9af08f7f",
        "name": "simular sensores presencia",
        "func": "const SERVER_ID = env.get(\"SERVER_ID\")\nconst NUM_SENS_PRESENCIA = parseInt(env.get(\"NUM_SENS_PRESENCIA\"))\n\nlet mensajes = []\nlet cambioEstado = null\n\n// por cada sensor de presencia\nfor(let i=0; i<NUM_SENS_PRESENCIA; i++)\n{\n    // 10% de probabilidad de que ocurra\n    if(Math.random() <= 0.1)\n    {\n        let timestamp = Date.now()\n        \n        // inserta lectura del sensor en array de mensajes\n        mensajes.push({\n            \"payload\": {\n                \"idServidorLocal\": SERVER_ID,\n                \"idSensor\": `${SERVER_ID}_presencia_${i}`,\n                \"valor\": 1,\n                \"timestamp\": timestamp\n            }\n        })\n        \n        // si ocurre, define mensaje para cambiar el estado del servidor\n        cambioEstado = {\n            \"payload\": {\n                \"idServidorLocal\": SERVER_ID,\n                \"estado\": \"presencia\",\n                \"timestamp\": timestamp\n            },\n            \"delay\": (Math.random() * 120000) + 60000 //1-3 minutos\n        }\n        \n        // cambia estado de servidor local a \"presencia\"\n        flow.set(\"estado\", \"presencia\")\n    }\n}\n\n// envia mensajes por caminos 1 y 2 en caso de que se cumpla la probabilidad\nreturn [mensajes, cambioEstado];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 180,
        "wires": [
            [
                "f80514bf9a63499c"
            ],
            [
                "ea70f3ba3fd69a0e"
            ]
        ],
        "outputLabels": [
            "registra lectura sensor",
            "registra cambio de estado"
        ]
    },
    {
        "id": "f80514bf9a63499c",
        "type": "mqtt out",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "topic": "/sensores/presencia",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ebacf60de60e21b",
        "x": 780,
        "y": 160,
        "wires": []
    },
    {
        "id": "66d3f635fa732443",
        "type": "inject",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "props": [],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 280,
        "wires": [
            [
                "53ee1373fe7b3e8c"
            ]
        ]
    },
    {
        "id": "38f6cd928673849c",
        "type": "comment",
        "z": "9dd59f4f9af08f7f",
        "name": "Incendio",
        "info": "",
        "x": 80,
        "y": 240,
        "wires": []
    },
    {
        "id": "d42a8f52c24758a9",
        "type": "function",
        "z": "9dd59f4f9af08f7f",
        "name": "simular sensores incendio",
        "func": "const SERVER_ID = env.get(\"SERVER_ID\")\nconst NUM_SENS_INCENDIO = parseInt(env.get(\"NUM_SENS_INCENDIO\"))\n\nlet mensajes = []\nlet mensajeCambioEstado = null\n\n// por cada sensor de incendio\nfor(let i=0; i<NUM_SENS_INCENDIO; i++)\n{\n    // 2% de probabilidad de que ocurra\n    if(Math.random() <= 0.02)\n    {\n        let timestamp =  Date.now()\n        \n        // inserta lectura del sensor en array de mensajes\n        mensajes.push({\n            \"payload\": {\n                \"idServidorLocal\": SERVER_ID,\n                \"idSensor\": `${SERVER_ID}_incendio_${i}`,\n                \"valor\": 1,\n                \"timestamp\": timestamp\n            }\n        })\n        \n        // si ocurre, define mensaje para cambiar el estado del servidor\n        mensajeCambioEstado = {\n            \"payload\": {\n                \"idServidorLocal\": SERVER_ID,\n                \"estado\": \"incendio\",\n                \"timestamp\": timestamp\n            },\n            \"delay\": (Math.random() * 1140000) + 60000 //1-20 minutos\n        }\n        \n        // cambia estado de servidor local a \"incendio\"\n        flow.set(\"estado\", \"incendio\")\n    }\n}\n\n// envia mensajes por caminos 1 y 2 en caso de que se cumpla la probabilidad\nreturn [mensajes, mensajeCambioEstado];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 280,
        "wires": [
            [
                "538025b28b34caac"
            ],
            [
                "c3125558cede7aa1"
            ]
        ],
        "outputLabels": [
            "registra lectura sensor",
            "registra cambio de estado"
        ]
    },
    {
        "id": "538025b28b34caac",
        "type": "mqtt out",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "topic": "/sensores/incendio",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ebacf60de60e21b",
        "x": 750,
        "y": 260,
        "wires": []
    },
    {
        "id": "994d236104dac5ef",
        "type": "link in",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "links": [
            "c3125558cede7aa1",
            "ea70f3ba3fd69a0e",
            "a26c142b95ab525b"
        ],
        "x": 65,
        "y": 480,
        "wires": [
            [
                "dedfd2774d83d172",
                "3e7a7cd4d1706008"
            ]
        ]
    },
    {
        "id": "c3125558cede7aa1",
        "type": "link out",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "mode": "link",
        "links": [
            "994d236104dac5ef"
        ],
        "x": 675,
        "y": 320,
        "wires": []
    },
    {
        "id": "3e7a7cd4d1706008",
        "type": "trigger",
        "z": "9dd59f4f9af08f7f",
        "name": "espera {msg.delay} milisegundos",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "250",
        "extend": true,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 250,
        "y": 480,
        "wires": [
            [
                "1c98f07676cc703a"
            ]
        ]
    },
    {
        "id": "1c98f07676cc703a",
        "type": "function",
        "z": "9dd59f4f9af08f7f",
        "name": "vuelve a estado \"trabajando\"",
        "func": "// define mensaje MQTT de actualizacion de estado\nmsg.payload = {\n    \"idServidorLocal\": env.get(\"SERVER_ID\"),\n    \"estado\": \"trabajando\",\n    \"timestamp\": Date.now()\n}\n\n// cambia estado del servidor local a \"trabajando\"\nflow.set(\"estado\", \"trabajando\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 480,
        "wires": [
            [
                "2235a0a9a105230a"
            ]
        ]
    },
    {
        "id": "dedfd2774d83d172",
        "type": "mqtt out",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "topic": "/estado",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ebacf60de60e21b",
        "x": 170,
        "y": 520,
        "wires": []
    },
    {
        "id": "ea70f3ba3fd69a0e",
        "type": "link out",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "mode": "link",
        "links": [
            "994d236104dac5ef"
        ],
        "x": 695,
        "y": 220,
        "wires": []
    },
    {
        "id": "2235a0a9a105230a",
        "type": "mqtt out",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "topic": "/estado",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ebacf60de60e21b",
        "x": 730,
        "y": 480,
        "wires": []
    },
    {
        "id": "9726ec859e8a6bfb",
        "type": "inject",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "props": [],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 380,
        "wires": [
            [
                "56dc263bd16e8c39"
            ]
        ]
    },
    {
        "id": "60a8c9ec51dfa7c0",
        "type": "comment",
        "z": "9dd59f4f9af08f7f",
        "name": "Interrupcion",
        "info": "",
        "x": 90,
        "y": 340,
        "wires": []
    },
    {
        "id": "765b27c6eccb9a89",
        "type": "function",
        "z": "9dd59f4f9af08f7f",
        "name": "interrupir servidor local",
        "func": "// 10% de probabilidad de que ocurra\nif(Math.random() <= 0.1)\n{\n    // define mensaje MQTT de actualizacion de estado\n    msg.payload = {\n        \"idServidorLocal\": env.get(\"SERVER_ID\"),\n        \"estado\": \"interrumpido\",\n        \"timestamp\": Date.now()\n    }\n    \n    // cambia estado de servidor local a \"interrumpido\"\n    flow.set(\"estado\", \"interrumpido\")\n\n    // define tiempo de espera antes de volver a estado \"trabajando\"\n    msg.delay = 60000\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 380,
        "wires": [
            [
                "a26c142b95ab525b"
            ]
        ],
        "outputLabels": [
            "registra lectura sensor"
        ]
    },
    {
        "id": "a26c142b95ab525b",
        "type": "link out",
        "z": "9dd59f4f9af08f7f",
        "name": "",
        "mode": "link",
        "links": [
            "994d236104dac5ef"
        ],
        "x": 655,
        "y": 380,
        "wires": []
    },
    {
        "id": "56dc263bd16e8c39",
        "type": "switch",
        "z": "9dd59f4f9af08f7f",
        "name": "flow.estado != interrumpido",
        "property": "estado",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "interrumpido",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 380,
        "wires": [
            [
                "765b27c6eccb9a89"
            ]
        ]
    },
    {
        "id": "53ee1373fe7b3e8c",
        "type": "switch",
        "z": "9dd59f4f9af08f7f",
        "name": "flow.estado != interrumpido",
        "property": "estado",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "interrumpido",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 280,
        "wires": [
            [
                "d42a8f52c24758a9"
            ]
        ]
    },
    {
        "id": "febc8b8e14af29ae",
        "type": "switch",
        "z": "9dd59f4f9af08f7f",
        "name": "flow.estado != interrumpido",
        "property": "estado",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "interrumpido",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 180,
        "wires": [
            [
                "f80f2d671d91404f"
            ]
        ]
    },
    {
        "id": "16c8b6ac48bee143",
        "type": "switch",
        "z": "9dd59f4f9af08f7f",
        "name": "flow.estado != interrumpido",
        "property": "estado",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "interrumpido",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 80,
        "wires": [
            [
                "9f113a42ef98f914"
            ]
        ]
    }
]