[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "412c2389580c0420",
        "type": "mongodb4-client",
        "name": "",
        "protocol": "mongodb",
        "hostname": "",
        "port": "",
        "dbName": "${MONGO_DB}",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsInsecure": false,
        "uri": "${MONGO_URL}",
        "advanced": "",
        "uriTabActive": "tab-uri-advanced"
    },
    {
        "id": "6307206ff6aca97e",
        "type": "http in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "url": "/localservers",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "3c6f1f329a2d47b9"
            ]
        ]
    },
    {
        "id": "9fa618fe9da221c4",
        "type": "mongodb4",
        "z": "f6f2187d.f17ca8",
        "clientNode": "412c2389580c0420",
        "collection": "servidores_locales",
        "operation": "aggregate",
        "output": "toArray",
        "name": "recupera todos los servidores locales",
        "x": 530,
        "y": 80,
        "wires": [
            [
                "4885f66c22406cc7",
                "272d19c2f704e304"
            ]
        ]
    },
    {
        "id": "3c6f1f329a2d47b9",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "set query",
        "func": "// devuelve todos los documentos y elimina\n// el campo \"_id\" de la respuesta\nmsg.payload = [[\n    {\n        $match: {}\n    },\n    {\n        $project: \n        {\n            \"_id\": 0\n        }\n    }\n]]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 80,
        "wires": [
            [
                "9fa618fe9da221c4"
            ]
        ]
    },
    {
        "id": "4885f66c22406cc7",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 40,
        "wires": []
    },
    {
        "id": "65ac4a0f29f90374",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 40,
        "wires": [
            [
                "3c6f1f329a2d47b9"
            ]
        ]
    },
    {
        "id": "272d19c2f704e304",
        "type": "http response",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 750,
        "y": 80,
        "wires": []
    },
    {
        "id": "13e9f42d8c8e9cd4",
        "type": "http in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "url": "/localservers/:name/sensors",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "c2bd8afc37680276"
            ]
        ]
    },
    {
        "id": "c2bd8afc37680276",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "set query",
        "func": "msg.payload = [[\n    {\n        $match: {\n            \"nombre\": msg.req.params.name\n        }\n    }\n]]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 220,
        "wires": [
            [
                "0d816dc6f214e510"
            ]
        ]
    },
    {
        "id": "0d816dc6f214e510",
        "type": "mongodb4",
        "z": "f6f2187d.f17ca8",
        "clientNode": "412c2389580c0420",
        "collection": "sensores_servidor_local",
        "operation": "aggregate",
        "output": "toArray",
        "name": "servidores_locales aggregate",
        "x": 600,
        "y": 220,
        "wires": [
            [
                "674d2d3c13371a25"
            ]
        ]
    },
    {
        "id": "b0dfbb5afd0f13da",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "req.params.name",
                "v": "sl1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 270,
        "y": 260,
        "wires": [
            [
                "c2bd8afc37680276"
            ]
        ]
    },
    {
        "id": "674d2d3c13371a25",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "response",
        "func": "if(msg.payload.length > 0)\n{\n    msg.payload = msg.payload[0];\n}else\n{\n    msg.payload = {\n        \"message\": \"Local server not found\"\n    }\n    \n    msg.statusCode = 404\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 220,
        "wires": [
            [
                "249f02b75edc8ce9",
                "aed9f18e9a3787de"
            ]
        ]
    },
    {
        "id": "249f02b75edc8ce9",
        "type": "http response",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 220,
        "wires": []
    },
    {
        "id": "aed9f18e9a3787de",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "faad40b4415f3b4c",
        "type": "http in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "url": "/sensors/:sensorId/readings",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 380,
        "wires": [
            [
                "20cc65d79e1ecc12"
            ]
        ]
    },
    {
        "id": "20cc65d79e1ecc12",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "set query",
        "func": "msg.payload = [[\n    {\n        $match: {\n            \"_id\": msg.req.params.sensorId\n        }\n    }\n]]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 380,
        "wires": [
            [
                "d6e6fc346b501596"
            ]
        ]
    },
    {
        "id": "d6e6fc346b501596",
        "type": "mongodb4",
        "z": "f6f2187d.f17ca8",
        "clientNode": "412c2389580c0420",
        "collection": "lecturas_sensor",
        "operation": "aggregate",
        "output": "toArray",
        "name": "servidores_locales aggregate",
        "x": 600,
        "y": 380,
        "wires": [
            [
                "49d5086db68d890d"
            ]
        ]
    },
    {
        "id": "044a36feea67148f",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "req.params.sensorId",
                "v": "629519055ca378dc6c5a7829",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 270,
        "y": 420,
        "wires": [
            [
                "20cc65d79e1ecc12"
            ]
        ]
    },
    {
        "id": "49d5086db68d890d",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "response",
        "func": "if(msg.payload.length > 0)\n{\n    msg.payload = msg.payload[0];\n}else\n{\n    msg.payload = {\n        \"message\": \"Local server not found\"\n    }\n    \n    msg.statusCode = 404\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 380,
        "wires": [
            [
                "a996c11a4b172035",
                "e5e0cd8dad406b34"
            ]
        ]
    },
    {
        "id": "a996c11a4b172035",
        "type": "http response",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 380,
        "wires": []
    },
    {
        "id": "e5e0cd8dad406b34",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 340,
        "wires": []
    },
    {
        "id": "db8881ea3ed79c00",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "MONGO_URL",
        "payloadType": "env",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "2597a467190d1fe2"
            ]
        ]
    },
    {
        "id": "2597a467190d1fe2",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 540,
        "wires": []
    }
]